# Create deployment and then service to expose that deployment. 

apiVersion: v1
kind: Service
metadata:
  labels:
    app: image-bouncer-webhook
  name: image-bouncer-webhook
spec:
  type: NodePort
  ports:
    - name: https
      port: 443
      targetPort: 1323
      protocol: "TCP"
      nodePort: 30080
  selector:
    app: image-bouncer-webhook


--- 


apiVersion: apps/v1
kind: Deployment
metadata:
  name: image-bouncer-webhook
spec:
  selector:
    matchLabels:
      app: image-bouncer-webhook
  template:
    metadata:
      labels:
        app: image-bouncer-webhook
    spec:
      containers:
        - name: image-bouncer-webhook
          imagePullPolicy: Always
          image: "kainlite/kube-image-bouncer:latest"
          args:
            - "--cert=/etc/admission-controller/tls/tls.crt"
            - "--key=/etc/admission-controller/tls/tls.key"
            - "--debug"
            - "--registry-whitelist=docker.io,k8s.gcr.io"
          volumeMounts:
            - name: tls
              mountPath: /etc/admission-controller/tls
      volumes:
        - name: tls
          secret:
            secretName: tls-image-bouncer-webhook

----

# After this need to specify the path to kube-config file in admission_configuration.yaml 
# And the node port as exposed by service in admission_kube_config file.

apiVersion: apiserver.config.k8s.io/v1
kind: AdmissionConfiguration
plugins:
- name: ImagePolicyWebhook
  configuration:
    imagePolicy:
      kubeConfigFile: <PATH_TO_KUBECONFIG> #  /etc/kubernetes/pki/admission_kube_config.yaml
      allowTTL: 50
      denyTTL: 50
      retryBackoff: 500
      defaultAllow: false # deny all pods if service is unavailable

-----
# root@controlplane:~# cat /etc/kubernetes/pki/admission_kube_config.yaml 

apiVersion: v1
kind: Config
clusters:
- cluster:
    certificate-authority: /etc/kubernetes/pki/server.crt
    server: https://image-bouncer-webhook:<NODE_PORT>/image_policy #NodePort=30080
  name: bouncer_webhook
contexts:
- context:
    cluster: bouncer_webhook
    user: api-server
  name: bouncer_validator
current-context: bouncer_validator
preferences: {}
users:
- name: api-server
  user:
    client-certificate: /etc/kubernetes/pki/apiserver.crt
    client-key:  /etc/kubernetes/pki/apiserver.key

# Now enable the policy webhook by editing /etc/kubernetes/manifests/kube-apiserver.yaml with enable-admission-plugins.
# It also needs admission control config file. 
#    - --enable-admission-plugins=NodeRestriction,ImagePolicyWebhook
  # - --admission-control-config-file=/etc/kubernetes/pki/admission_configuration.yaml#

  # Make a directory on host /etc/kubernetes/admission (copy all files - admission-config.yaml & kubeconfig) and then mount it on kube-api-server